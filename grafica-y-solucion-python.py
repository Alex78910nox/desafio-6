# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l7xCUhZTDTmW28-aJgRCVhoGZl0ZLH2K
"""

import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

# Definir la matriz A y el vector b
A = np.array([[1, 1, 1], [1.0001, 1, 1], [1, 1.0001, 1]])
b = np.array([3, 3.0001, 3.0001])

# Resolver el sistema de ecuaciones
x = np.linalg.solve(A, b)

# Crear un gráfico 3D para visualizar los planos correspondientes a cada ecuación
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')

# Crear un rango de valores para las gráficas
x_vals = np.linspace(0, 3, 10)
y_vals = np.linspace(0, 3, 10)
X, Y = np.meshgrid(x_vals, y_vals)

# Definir las tres ecuaciones del sistema (planos)
Z1 = 3 - X - Y  # Primera ecuación
Z2 = 3.0001 - 1.0001*X - Y  # Segunda ecuación
Z3 = 3.0001 - X - 1.0001*Y  # Tercera ecuación

# Graficar los planos
ax.plot_surface(X, Y, Z1, alpha=0.5, rstride=100, cstride=100, color='r')
ax.plot_surface(X, Y, Z2, alpha=0.5, rstride=100, cstride=100, color='g')
ax.plot_surface(X, Y, Z3, alpha=0.5, rstride=100, cstride=100, color='b')

# Graficar la solución
ax.scatter(x[0], x[1], x[2], color='k', s=100)  # Solución del sistema

# Etiquetas
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Z')
ax.set_title('Visualización del sistema de ecuaciones lineales')

plt.show()

print(f"Solución del sistema: x = {x}")